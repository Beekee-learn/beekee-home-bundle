{"version":3,"sources":["meteor://ðŸ’»app/packages/hex7c0_app-dump/app-dump-server.coffee"],"names":[],"mappings":"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","file":"/packages/hex7c0_app-dump.js","sourcesContent":["backup = Npm.require('mongodb-backup')\nrestore = Npm.require('mongodb-restore')\nmoment = Npm.require('moment')\nBusboy = Npm.require(\"busboy\")\npath = Npm.require('path')\nfs = Npm.require('fs')\n\nappDump =\n  allow: -> true\n\nRouter.map ->\n  @route 'appDumpHTTP',\n    path: '/appDump',\n    where: 'server',\n    action: ->\n      self = @\n      req = @request\n      res = @response\n\n\n      if req.method is 'GET'\n\n        req.query.parser?= ''\n        check req.query.parser, String\n\n        self.options =\n          parser: req.query.parser\n\n        # parse the collections\n        if req.query.collections\n          check req.query.collections, String\n\n          # convert commas into array\n          self.options.collections = req.query.collections.split(',').map (col) -> col.trim()\n\n          if self.options.collections.length is 0\n            self.options.collections = null\n\n        # parse the query\n        if req.query.query\n          check req.query.query, String\n          try\n            self.options.query = JSON.parse req.query.query\n          catch e\n            res.statusCode = 401\n            res.end \"Failed to parse JSON Query\"\n            return false\n\n\n        # add the token\n        token = req.query.token || ''\n        check token, String\n        self.user = Meteor.users.findOne({\"services.resume.loginTokens.hashedToken\": Accounts._hashLoginToken(token)});\n\n        if !appDump.allow.apply self\n          res.statusCode = 401\n          res.end 'Unauthorized'\n          return false\n\n        meteor_root = fs.realpathSync(process.cwd() + '/../')\n        application_root = fs.realpathSync(meteor_root + '/../')\n\n        if path.basename(fs.realpathSync(meteor_root + '/../../../')) == '.meteor'\n          application_root = fs.realpathSync(meteor_root + '/../../../../')\n\n        separator = if application_root.indexOf('\\\\') > -1 then '\\\\' else '/'\n\n        if req.query.filename\n          check req.query.filename, String\n          filename = req.query.filename.replace(/[^a-z0-9_-]/gi, '_') + '.tar'\n\n        unless filename\n          safe =\n            host: req.headers.host.replace(/[^a-z0-9]/gi, '-').toLowerCase()\n            app: application_root.split(separator).pop().replace(/[^a-z0-9]/gi, '-').toLowerCase()\n            date: moment().format(\"YY-MM-DD_HH-mm-ss\")\n            parser: self.options.parser || 'bson'\n\n          filename = \"meteordump_#{safe.parser}_#{safe.app}_#{safe.host}_#{safe.date}.tar\"\n\n        res.statusCode = 200\n        res.setHeader 'Content-disposition', \"attachment; filename=#{filename}\"\n\n        backupOptions =\n          uri: process.env.MONGO_URL\n          stream: res\n          tar: 'dump.tar'\n          query: self.options.query\n          parser: self.options.parser\n\n        if self.options.collections\n          backupOptions.collections = self.options.collections\n\n        backup backupOptions\n\n\n      if req.method is 'POST'\n        busboy = new Busboy\n          headers: req.headers\n          limits:\n            fields:3\n            files:1\n\n        token = undefined\n        self.options =\n          drop: false\n          parser: 'bson'\n\n        busboy.on \"field\", (fieldname, val) ->\n          if fieldname is 'token'\n            check val, String\n            token = val\n          if fieldname is 'drop'\n            self.options.drop = true\n          if fieldname is 'parser'\n            # parser isn't being used for restores becuase it doesn't work well with json\n            check val, String\n            self.options.parser = val\n\n        busboy.on \"file\", Meteor.bindEnvironment (fieldname, file, filename) ->\n\n          if fieldname isnt 'appDumpUpload' or filename.split('.').pop() isnt 'tar'\n            res.statusCode = 400\n            res.end 'Incorrect file type. Expecting a file ending in .tar'\n            return false\n\n          unless file?\n            res.statusCode = 400\n            res.end 'File not found'\n            return false\n\n          self.user = Meteor.users.findOne({\"services.resume.loginTokens.hashedToken\": Accounts._hashLoginToken(token)})\n\n          if !appDump.allow.apply(self)\n            res.statusCode = 401\n            res.end 'Unauthorized'\n            return false\n\n          restoreOptions =\n            uri: process.env.MONGO_URL\n            stream: file\n            parser: self.options.parser\n            dropCollections: self.options.drop\n            callback : -> res.end()\n\n          restore restoreOptions\n\n        req.pipe busboy\n\n\n"]}