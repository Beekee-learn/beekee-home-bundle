{"version":3,"sources":["meteor://ðŸ’»app/server/methods.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC;AACzC,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;;AAE7B,MAAM,CAAC,OAAO,CAAC;AACd,eAAc,EAAE,YAAW;AAC1B,MAAI,GAAG,CAAC;AACR,KAAG,GAAG,GAAG,CAAC,wCAAwC,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,wCAAwC,CAAC,GAAG,IAAI,GAAC,GAAG,CAAC,qCAAqC,CAAC,GAAC,OAAO,CAAC;AACrK,SAAO,GAAG,CAAC;EACX;AACD,aAAY,EAAE,UAAS,OAAO,EAAE;;;AAG/B,QAAM,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;;AAEtC,MAAI,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;;AAE1B,MAAI,CAAC,YAAY,GAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAC,yCAAyC,EAAE,UAAS,KAAK,EAAC,MAAM,EAAC,MAAM,EAAC;;;AAG5G,UAAO,CAAC,GAAG,CAAC,SAAS,EAAC,KAAK,CAAC,CAAC;AAC7B,UAAO,CAAC,GAAG,CAAC,UAAU,EAAC,MAAM,CAAC,CAAC;AAC/B,UAAO,CAAC,GAAG,CAAC,UAAU,EAAC,MAAM,CAAC,CAAC;;AAE/B,SAAM,UAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;GACpC,CAAC,CAAC;;AAET,SAAO,MAAM,CAAC,IAAI,EAAE,CAAC;EACrB;AACD,YAAW,EAAE,UAAS,OAAO,EAAE;;;AAG9B,QAAM,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;;AAEtC,MAAI,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;;AAE1B,MAAI,CAAC,YAAY,GAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAC,wCAAwC,EAAE,UAAS,KAAK,EAAC,MAAM,EAAC,MAAM,EAAC;AAC3G,UAAO,CAAC,GAAG,CAAC,SAAS,EAAC,KAAK,CAAC,CAAC;AAC7B,UAAO,CAAC,GAAG,CAAC,UAAU,EAAC,MAAM,CAAC,CAAC;AAC/B,UAAO,CAAC,GAAG,CAAC,UAAU,EAAC,MAAM,CAAC,CAAC;;AAE/B,SAAM,UAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;GACpC,CAAC,CAAC;;AAET,SAAO,MAAM,CAAC,IAAI,EAAE,CAAC;EACrB;CACD,CAAC,CAAC,sE","file":"/server/methods.js","sourcesContent":["exec = Npm.require('child_process').exec; // No idea what is this ?\ncmd = Meteor.wrapAsync(exec);\n\nMeteor.methods({\n\t'getUsedSpace': function() {\n\t\tvar res;\n\t\tres = cmd(\"df / -h | awk '{print ($3)}' | tail -1\") + \"/ \" + cmd(\"df / -h | awk '{print ($2)}' | tail -1\") + \" (\"+cmd(\"df / | awk '{print ($5)}' | tail -1\")+\"used)\";\n\t\treturn res;\n\t},\n\t'installApp': function(appName) {\n\n\t\t// Use future to force Meteor to wait until de script is finished\n\t\tFuture = Npm.require('fibers/future');\n\n\t\tlet future = new Future();\n\n\t\texec('/bin/bash '+Meteor.settings.scriptsPath+'apps/beekee-live/beekee-live_install.sh', function(error,stdout,stderr){\n\n\t\t//exec('/bin/bash /Users/Vince/Desktop/beekee-home/scripts/apps/beekee-live/beekee-live_install.sh', function(error,stdout,stderr){\n            console.log('error: ',error);\n            console.log('stdout: ',stdout);\n            console.log('stderr: ',stderr);\n\n            future.return(stdout.toString());\n        });\n\n\t\treturn future.wait();\n\t},\n\t'updateApp': function(appName) {\n\n\t\t// Use future to force Meteor to wait until de script is finished\n\t\tFuture = Npm.require('fibers/future');\n\n\t\tlet future = new Future();\n\n\t\texec('/bin/bash '+Meteor.settings.scriptsPath+'apps/beekee-live/beekee-live_update.sh', function(error,stdout,stderr){\n            console.log('error: ',error);\n            console.log('stdout: ',stdout);\n            console.log('stderr: ',stderr);\n\n            future.return(stdout.toString());\n        });\n\n\t\treturn future.wait();\n\t}\n});"]}