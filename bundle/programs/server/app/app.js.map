{"version":3,"sources":["meteor://ðŸ’»app/lib/app_loader.js","meteor://ðŸ’»app/imports/api/apps.js","meteor://ðŸ’»app/imports/api/synchronizations.js","meteor://ðŸ’»app/imports/api/users.js","meteor://ðŸ’»app/server/fixtures.js","meteor://ðŸ’»app/server/methods.js","meteor://ðŸ’»app/server/publications.js","meteor://ðŸ’»app/server/main.js"],"names":["Meteor","isServer","Inject","rawHead","rawBody","Assets","getText","isClient","startup","setTimeout","$","addClass","fadeOut","remove","removeClass","module","export","Apps","Mongo","link","v","Collection","allow","insert","update","userId","space","publish","appsPublication","find","Synchronizations","synchronizationsPublication","isAdmin","console","log","Roles","userIsInRole","user","roleAssignment","ready","createRole","unlessExists","users","count","adminPassword","settings","username","roles","_","each","id","Accounts","createUser","email","password","profile","name","length","addUsersToRoles","defaultApps","customApp","onlyTeacher","order","doc_user","doc_admin","last_version","url","icon","description","installed","version","hidden","HTTP","fs","Npm","require","exec","cmd","wrapAsync","wifiSettingsPath","configPath","readline","methods","adminId","newPassword","setPassword","_id","$set","check","String","oldemail","emails","emailReg","test","removeEmail","address","addEmail","error","result","message","removeUsersFromRoles","command","res","storageUsage","toFixed","storageTotal","percentage","data","readFileSync","match","RegExp","SSID","decodeURIComponent","replace","newSSID","encodedNewSSID","Buffer","toString","newData","writeFileSync","channel","newChannel","serial","operatorName","signalStrength","strengthValue","parseInt","quality","APN","APNUser","APNPassword","simStatusResult","executeCommand","simStatus","includes","SimPin","PIN","isSharing","res2","scriptsPath","isOnline","json","JSON","parse","trim","listForwardRulesCommand","commandResult","Error","sharingFromWlanToEth","sharingToWlanFromEthEstablished","beekeeOSVersion","call","status","macAddress","callback","iptablesCommands","join","stdout","stderr","iptablesDeleteCommands","executeAndRepeat","doneCallback","tasksCompleted","forEach","allowMacCommand","blockOthersCommand","lines","split","ruleNumbers","reduce","acc","line","index","toLowerCase","ruleNumber","push","sort","a","b","removeError","removeStdout","removeStderr","saveError","saveStdout","saveStderr","sharingFromWlanToWwan","sharingToWlanFromWwanEstablished","deviceSerial","public","deviceToken","moodleAPIToken","cloudURL","options","headers","npmRequestOptions","rejectUnauthorized","timeout","post","resultContent","content","e"],"mappings":"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","file":"/app.js","sourcesContent":["if (Meteor.isServer) {\n\tInject.rawHead(\"metaLoader\", '<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=0, width=device-width, height=device-height\"/><meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\t<meta name=\"mobile-web-app-capable\" content=\"yes\">');\n\n\tInject.rawBody(\"htmlLoader\", Assets.getText('app_loader.html'));\n}\n\nif (Meteor.isClient) {\n\tMeteor.startup(function() {\n\n\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t$('.index--icon').addClass('animated-icon');\n\n\t\t\t$(\"#inject-loader-wrapper\").fadeOut(500, function() {\n\t\t\t\t$(this).remove();\n\t\t\t\t$('.index--icon').removeClass('animated-icon');\n\t\t});\n\t\t}, 500);\n\t});\n}","import { Mongo } from 'meteor/mongo';\n \nexport const Apps = new Mongo.Collection('home-apps');\n\n\n\nApps.allow({\n\n\tinsert: function() { return true},\n\tupdate: function(userId, space) { return true},\n\tremove: function(userId, space) { return true},\n\n\t// insert: function(userId, space) { return ownsDocument(userId, space) || isAdmin(userId); },\n\n\t// update: function(userId, space) { return ownsDocument(userId, space) || isAdmin(userId); },\n\n\t// remove: function(userId, space) { return ownsDocument(userId, space) || isAdmin(userId); }\n});\n\n// Publications\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  Meteor.publish('allApps', function appsPublication() {\n    return Apps.find();\n  });\n}","import { Mongo } from 'meteor/mongo';\n \nexport const Synchronizations = new Mongo.Collection('home-synchronizations');\n\n\n\nSynchronizations.allow({\n\n\tinsert: function() { return true},\n\tupdate: function() { return true},\n\tremove: function() { return true},\n\n\t// insert: function(userId, space) { return ownsDocument(userId, space) || isAdmin(userId); },\n\n\t// update: function(userId, space) { return ownsDocument(userId, space) || isAdmin(userId); },\n\n\t// remove: function(userId, space) { return ownsDocument(userId, space) || isAdmin(userId); }\n});\n\n// Publications\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  Meteor.publish('allSynchronizations', function synchronizationsPublication() {\n    return Synchronizations.find();\n  });\n}","import { Mongo } from 'meteor/mongo';\n\n// var usersDB\t= new MongoInternals.RemoteCollectionDriver('mongodb://localhost:27017/beekee-live');\n// var collection\t= usersDB.open('users');\n\n\n//const database = new MongoInternals.RemoteCollectionDriver('mongodb://localhost:27017/beekee-live');\n//const collection = new Mongo.Collection(\"users\", { _driver: database });\n\n//export const Users = new Mongo.Collection(\"users\", { _driver: database });\n\n// Sharing the same Account collection than beekee-live\nif (Meteor.isServer) {\n\n\t// check that the userId specified is admin\nisAdmin = function(userId) {\n\tconsole.log(\"isadmin\");\n  return Roles.userIsInRole(Meteor.user(), 'admin');\n}\n\n\n// Publish Roles to client\nMeteor.publish(null, function () {\n  if (this.userId) {\n    return Meteor.roleAssignment.find({ 'user._id': this.userId });\n  } else {\n    this.ready()\n  }\n});\n\nMeteor.publish(null, function () {\n\t    return Meteor.roleAssignment.find();\n\n});\n\n  // Meteor.publish('allUsers', function () {\n  // \tconsole.log(\"users: \"+Meteor.users.find().count());\n  //   return Meteor.users.find();\n  // });\n\n// Server2 = DDP.connect(\"http://beekee.box:83\");\n// Accounts.connection = Server2;\n\n\n//var database = new MongoInternals.RemoteCollectionDriver('mongodb://localhost:27017/beekee-live');\n//Meteor.users = new Mongo.Collection(\"users\", { _driver: database });\n\n//export const Users = new Mongo.Collection('apps');\n\n\n  // This code only runs on the server\n  // Meteor.publish('allUsers', function () {\n  // \tconsole.log(\"users: \"+Meteor.users.find().count());\n  //   return Meteor.users.find();\n  // });\n}","import { Apps } from '../imports/api/apps.js';\n\n\t// Create the roles\n\tRoles.createRole('manager', {unlessExists: true});\n\n\n// ###  Create admin user at first start  ###\n\n\nif (Meteor.users.find().count() === 0) {\n\t\n\t// Create the role\n\tRoles.createRole('manager', {unlessExists: true});\n\tRoles.createRole('admin', {unlessExists: true});\n\n\tvar adminPassword = Meteor.settings.adminPassword;\n\n\tvar users = [\n\t\t{username:\"admin\",roles:['admin']},\n\t];\n\n\t_.each(users, function (user) {\n\t\tvar id;\n\t\tid = Accounts.createUser({\n\t\t\tusername: user.username,\n\t\t\temail: \"Admin\",\n\t\t\tpassword: adminPassword,\n\t\t\tprofile:{name:\"Admin\"}\n\t\t});\n\n\t\tif (user.roles.length > 0) {\n\t\t\tRoles.addUsersToRoles(id, user.roles);\n\t\t}\n\t});\n}\n\n\nif (Apps.find().count() === 0) {\n\n\tvar defaultApps = [\n\t\t{name:\"Live\", customApp:false, onlyTeacher:false, order:3, doc_user:false, doc_admin:false, last_version:\"1.3.3\", url:\"http://live.beekee.box\", icon:\"beekee-live.png\", description:\"Beekee Live promote real-time interaction by allowing learners to express themselves asking questions, posting photos or sharing files.\", installed:true, version: \"1.4\", hidden:false},\n\t\t{name:\"Resources\", customApp:false, onlyTeacher:false, order:7, doc_user:false, doc_admin:false, last_version:\"1.3.3\", url:\"http://resources.beekee.box\", icon:\"beekee-resources.png\", description:\"With Beekee Resources, you can easily share files with your learners.\", installed:true, version: \"0.1\", hidden:false},\n\t\t{name:\"Wheel\", customApp:false, onlyTeacher:true, order:9, doc_user:false, doc_admin:false, last_version:\"0.7\", url:\"http://wheel.beekee.box\", icon:\"beekee-wheel.png\", description:\"Beekee Wheel is a simple random picker wheel that allow you to pick up a random name.\", installed:true, version: \"0.8\", hidden:false},\n\t\t{name:\"Timer\", customApp:false, onlyTeacher:false, order:8, doc_user:false, doc_admin:false, last_version:\"1.3.3\", url:\"http://timer.beekee.box\", icon:\"beekee-timer.png\", description:\"Beekee Timer is a simple timer that lets your learners know how much time they have left.\", installed:true, version: \"0.1\", hidden:false},\n\t\t{name:\"Moodle\", customApp:true, onlyTeacher:false, order:1, doc_user:\"moodle_teacherdoc.pdf\", doc_admin:false, last_version:\"xx\", url:\"http://moodle.beekee.box\", icon:\"moodle.png\", description:\"Moodle is a free, online Learning Management system enabling educators to create their own private website filled with dynamic courses that extend learning, any time, anywhere.\", installed:true, version: \"3.11.2\", hidden:false},\n\t\t{name:\"Kolibri\", customApp:true, onlyTeacher:false, order:2, doc_user:\"kolibri_userdoc.pdf\", doc_admin:false, last_version:\"xx\", url:\"http://kolibri.beekee.box\", icon:\"kolibri.png\", description:\"Kolibri is an open-source educational platform specially designed to provide offline access to a wide range of quality, openly licensed educational resources in low-resource contexts like rural schools, refugee camps, orphanages, and also in non-formal school programs.\", installed:true, version: \"0.14.7\", hidden:false},\n\t\t// {name:\"Etherpad\", customApp:true, onlyTeacher:false, order:5, doc_user:false, doc_admin:false, last_version:\"xx\", url:\"http://etherpad.beekee.box\", icon:\"etherpad.png\", description:\"Etherpad allows you to edit documents collaboratively in real-time, much like a live multi-player editor that runs in your browser. Write articles, press releases, to-do lists, etc. together with your friends, fellow students or colleagues, all working on the same document at the same time.\", installed:true, version: \"1.8.14\", hidden:false},\n\t\t{name:\"Storm\", customApp:true, onlyTeacher:false, order:4, doc_user:false, doc_admin:false, last_version:\"xx\", url:\"http://storm.beekee.box\", icon:\"storm.png\", description:\"Create and animate live surveys, brainstorms and quizzes.\", installed:true, version: \"0.4.5\", hidden:false},\n\t\t{name:\"Pad\", customApp:true, onlyTeacher:false, order:5, doc_user:false, doc_admin:false, last_version:\"xx\", url:\"http://pad.beekee.box\", icon:\"pad.png\", description:\"Create collaborative walls to share and organize content.\", installed:true, version: \"0.8.1\", hidden:false},\n\t\t{name:\"Buzzer\", customApp:true, onlyTeacher:true, order:6, doc_user:false, doc_admin:false, last_version:\"xx\", url:\"http://buzzer.beekee.box\", icon:\"buzzer.png\", description:\"Create a virtual gaming room around a connected buzzer.\", installed:true, version: \"0.2.4\", hidden:false},\n\n\t];\n\n\t_.each(defaultApps, function (defaultApps) {\n\t\tApps.insert(defaultApps);\n\t});\n}","import { HTTP } from 'meteor/http'\n\nMeteor.startup(function() {\n\n\tif (Meteor.isServer) {\n\n\tvar fs = Npm.require('fs');\n\texec = Npm.require('child_process').exec;\n\tcmd = Meteor.wrapAsync(exec);\n\n\tvar wifiSettingsPath = Meteor.settings.wifiSettingsPath;\n\tvar configPath = Meteor.settings.configPath;\n\tconst readline = require('readline');\n\n\n\tMeteor.methods({\n\n\t\t'adminSetNewPassword': function(adminId, userId, newPassword) { // Admin can forcibly change the password for a user\n\t\t\tif (Roles.userIsInRole(adminId, 'admin')) {\n\t\t\t\tAccounts.setPassword(userId, newPassword);\n\t\t\t}\n\t\t},\n\t\t'createAccount': function(email, password, profile) {\n\t\t\treturn Accounts.createUser({email:email,password:password,profile:profile}); // Callback is not supported on server-side\n\t\t},\n\t\t'editAccount': function(userId, email, password, profile) {\n\t\t\tMeteor.users.update({_id: userId}, {\n\t  \t\t\t$set: {\n\t    \t\t\t'emails.0.address': email,\n\t    \t\t\tprofile: profile\n\t  \t\t\t}\n\t\t\t});\n\t\t\tif (password) {\n\t\t\t\tAccounts.setPassword(userId, password);\n\t\t\t}\n\t\t},\n\t\t'changeEmail': function(email) {\n\t\t\tvar email = email;\n\t\t\tcheck(email, String);\n\t\t\tvar user = Meteor.user();\n\t\t\tvar oldemail = user.emails;\n\t\t\tvar emailReg = /^([\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4})?$/;\n\t\t\tif (emailReg.test(email)) {\n\t\t\tif(oldemail != null){\n\t\t\t  Accounts.removeEmail(user._id, user.emails[0].address)\n\t\t\t}\n\t\t\tAccounts.addEmail(user._id, email);\n\t\t\treturn email;\n\t\t  } else\n\t\t  return null\n\t\t },\n\t\t'deleteUser': function(userId) {\n\t\t\tMeteor.users.remove(userId, function (error, result) {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(\"Error when deleting user : \"+error.message);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t'addManagerRole': function(userId) {\n\t\t\tRoles.addUsersToRoles(userId, 'manager');\n\t\t},\n\t\t'removeManagerRole': function(userId) {\n\t\t\tRoles.removeUsersFromRoles(userId, 'manager');\n\t\t},\n\t\t'addAdminRole': function(userId) {\n\t\t\tRoles.addUsersToRoles(userId, 'admin');\n\t\t},\n\t\t'removeAdminRole': function(userId) {\n\t\t\tRoles.removeUsersFromRoles(userId, 'admin');\n\t\t},\n\n\t\t// 'getUsedSpace': function() {\n\t\t// \tvar res;\n\t\t// \tres = cmd(\"df / -h | awk '{print ($3)}' | tail -1\") + \"/ \" + cmd(\"df / -h | awk '{print ($2)}' | tail -1\") + \" (\"+cmd(\"df / | awk '{print ($5)}' | tail -1\")+\"used)\";\n\t\t// \treturn res;\n\t\t// },\n\t\t'runCommand': function(password, command) {\n\t\t\tvar res;\n\t\t\tres = cmd(\"echo \"+password+\" | sudo -S \"+command);\n\t\t\treturn res;\n\t\t},\n\t\t'getUsedSpace': function() {\n\t\t\tvar res = {};\n\t\t\t//res = cmd(\"df / -h | awk '{print ($3)}' | tail -1\") + \"/ \" + cmd(\"df / -h | awk '{print ($2)}' | tail -1\") + \" (\"+cmd(\"df / | awk '{print ($5)}' | tail -1\")+\"used)\";\n\t\t\tres.storageUsage = cmd(\"df / | awk '{print ($3)}' | tail -1\")\n\t\t\tres.storageUsage = res.storageUsage/1000000;\n\t\t\tres.storageUsage = res.storageUsage.toFixed(2);\n\t\t\tres.storageTotal = cmd(\"df / | awk '{print ($2)}' | tail -1\")\n\t\t\tres.storageTotal = res.storageTotal/1000000;\n\t\t\tres.storageTotal = res.storageTotal.toFixed(2);\n\t\t\tres.percentage = cmd(\"df / | awk '{print ($5)}' | tail -1\");\n\t\t\treturn res;\n\t\t},\n\t\t'getSSID': function() {\n  \t\t\tvar data = fs.readFileSync(wifiSettingsPath, 'utf-8');\n  \t\t\tvar match = data.match(new RegExp('ssid=(.*)'));\n  \t\t\tvar SSID = match[1];\n  \t\t\tSSID = decodeURIComponent(SSID.replace(/../g, '%$&'))\n  \t\t\treturn SSID;\n\t\t},\n\t\t'setSSID': function(newSSID) {\n\t\t\tvar data = fs.readFileSync(wifiSettingsPath, 'utf-8');\n  \t\t\tconst encodedNewSSID = new Buffer(newSSID).toString('hex'); // Convert into Hex\n  \t\t\tvar newData = data.replace(data.match(new RegExp('ssid=(.*)'))[1], encodedNewSSID);\n\t\t\tfs.writeFileSync(wifiSettingsPath, newData, 'utf-8');\n\t\t},\n\t\t'getWifiPassword': function() {\n  \t\t\tvar data = fs.readFileSync(wifiSettingsPath, 'utf-8');\n  \t\t\tvar match = data.match(new RegExp('password=(.*)'));\n  \t\t\tvar password = match[1];\n  \t\t\treturn password;\n\t\t},\n\t\t'setWifiPassword': function(newPassword) {\n\t\t\tvar data = fs.readFileSync(wifiSettingsPath, 'utf-8');\n  \t\t\tvar newData = data.replace(data.match(new RegExp('password=(.*)'))[1], newPassword);\n\t\t\tfs.writeFileSync(wifiSettingsPath, newData, 'utf-8');\n\t\t},\n\t\t'getWifiChannel': function() {\n  \t\t\tvar data = fs.readFileSync(wifiSettingsPath, 'utf-8');\n  \t\t\tvar match = data.match(new RegExp('channel=(.*)'));\n  \t\t\tvar channel = match[1];\n  \t\t\treturn channel;\n\t\t},\n\t\t'setWifiChannel': function(newChannel) {\n\t\t\tvar data = fs.readFileSync(wifiSettingsPath, 'utf-8');\n  \t\t\tvar newData = data.replace(data.match(new RegExp('channel=(.*)'))[1], newChannel);\n\t\t\tfs.writeFileSync(wifiSettingsPath, newData, 'utf-8');\n\t\t},\n\t\t// 'getWifiBand': function() {\n\t\t// \tvar data = fs.readFileSync(wifiSettingsPath, 'utf-8');\n\t\t// \tvar match = data.match(new RegExp('band=(.*)'));\n\n\t\t// \tif (match && match[1]) {\n\t\t// \t  return match[1];\n\t\t// \t} else {\n\t\t// \t  // Return default value if the band setting does not exist\n\t\t// \t  return '2.4GHz';\n\t\t// \t}\n\t\t//   },\n\t\t// 'setWifiBand': function(newBand) {\n\t\t// \tvar data = fs.readFileSync(wifiSettingsPath, 'utf-8');\n\t\t// \tvar bandRegex = new RegExp('band=(.*)');\n\t\t// \tvar channelRegex = new RegExp('channel=(.*)');\n\t\t// \tvar matchBand = data.match(bandRegex);\n\t\t// \tvar matchChannel = data.match(channelRegex);\n\n\t\t// \tvar newData = data;\n\n\t\t// \tif (matchBand) {\n\t\t// \t\t// Replace the existing band setting\n\t\t// \t\tnewData = newData.replace(bandRegex, `band=${newBand}`);\n\t\t// \t} else {\n\t\t// \t\t// Append the new band setting\n\t\t// \t\tnewData = `${newData.trim()}\\nband=${newBand}`;\n\t\t// \t}\n\n\t\t// \tif (matchChannel && matchChannel[1]) {\n\t\t// \t\t// Convert the channel value to a number\n\t\t// \t\tvar currentChannel = parseInt(matchChannel[1], 10);\n\n\t\t// \t\t// Set channel to a default 2.4GHz channel if current channel is for 5GHz\n\t\t// \t\tif (newBand == \"2.4GHz\" && currentChannel > 14) {\n\t\t// \t\t\tnewData = newData.replace(channelRegex, `channel=11`);\n\t\t// \t\t} else if (newBand == \"5GHz\" && currentChannel <= 14) {\n\t\t// \t\t\tnewData = newData.replace(channelRegex, `channel=44`);\n\t\t// \t\t}\n\t\t// \t}\n\n\t\t// \tfs.writeFileSync(wifiSettingsPath, newData, 'utf-8');\n\t\t// },\n\t\t//   'setWifiBand': function(newBand) {\n\t\t// \tvar data = fs.readFileSync(wifiSettingsPath, 'utf-8');\n\t\t// \tvar bandRegex = new RegExp('band=(.*)');\n\t\t// \tvar match = data.match(bandRegex);\n\n\t\t// \tif (match) {\n\t\t// \t  // Replace the existing band setting\n\t\t// \t  var newData = data.replace(bandRegex, `band=${newBand}`);\n\t\t// \t} else {\n\t\t// \t  // Append the new band setting\n\t\t// \t  var newData = `${data.trim()}\\nband=${newBand}`;\n\t\t// \t}\n\t\t// \tvar channelRegex = new RegExp('channel=(.*)');\n\t\t// \tvar match2 = data.match(channelRegex);\n\t\t// \tif (match2 && match2[1]) {\n\t\t// \t\t// Set channel to a default 2.4GHz channel if current channel is for 5GHz\n\t\t// \t\tif (newBand == \"2.4GHz\" && match2[1] > 14) {\n\t\t// \t\t\t// Append the new band setting\n\t\t// \t\t\tvar newData2 = data.replace(channelRegex, `channel=11`);\n\t\t// \t\t} else if (newBand == \"5GHz\" && match2[1] <= 14) {\n\t\t// \t\t\tvar newData2 = data.replace(channelRegex, `channel=44`);\n\t\t// \t\t}\n\t\t// \t}\n\t\t// \tfs.writeFileSync(wifiSettingsPath, newData, 'utf-8');\n\t\t//   },\n\t\t'getSerial': function () {\n  \t\t\tvar data = fs.readFileSync(configPath, 'utf-8');\n  \t\t\tvar match = data.match(new RegExp('SERIAL=(.*)'));\n  \t\t\tvar serial = match[1];\n  \t\t\treturn serial;\n\t\t},\n\t\t'getOperatorName': function() {\n\t\t\tvar operatorName;\n\t\t\toperatorName = cmd(\"sudo qmicli --device=/dev/cdc-wdm0 --nas-get-operator-name | grep -m2 'Name             ' | awk '{print $3}'\");\n\t\t\treturn operatorName;\n\t\t},\n\t\t// 'getSignalStrength': function () {\n\t\t// \tvar signalStrength;\n\t\t// \tsignalStrength = cmd(\"sudo qmicli --device=/dev/cdc-wdm0 --nas-get-signal-strength | grep -m1 Network | awk '{print $3, $2}'\");\n\t\t// \treturn signalStrength;\n\t\t// },\n\t\t'getSignalStrength': function () {\n\t\t\tvar signalStrength;\n\t\t\t// This extracts just the numeric part of the signal strength.\n\t\t\tsignalStrength = cmd(\"sudo qmicli --device=/dev/cdc-wdm0 --nas-get-signal-strength | grep 'Network' | awk '{print $3}' | grep -oE '[-0-9]+'\");\n\n\t\t\t// Convert signal strength to a qualitative value\n\t\t\tvar strengthValue = parseInt(signalStrength);\n\t\t\tvar quality = 'Unknown';\n\t\t\tif (strengthValue >= -70) {\n\t\t\t\tquality = 'Excellent';\n\t\t\t} else if (strengthValue >= -85) {\n\t\t\t\tquality = 'Good';\n\t\t\t} else if (strengthValue >= -100) {\n\t\t\t\tquality = 'Fair';\n\t\t\t} else if (strengthValue < -100) {\n\t\t\t\tquality = 'Poor';\n\t\t\t}\n\t\t\treturn quality;\n\t\t},\n\t\t// 'getIsOnline': function () {\n\t\t// \tvar isOnline;\n\t\t// \tisOnline = cmd(\"sudo qmicli --device=/dev/cdc-wdm0 --nas-get-signal-strength | grep -m1 Network | awk '{print $3, $2}'\");\n\t\t// \treturn isOnline;\n\t\t// },\n\t\t// 'getBand': function () {\n\t\t// \tvar band;\n//\t\t\tband = cmd(\"sudo qmicli --device=/dev/cdc-wdm0 --nas-get-signal-strength | grep -m1 Network | awk \\\"{print $2}\\\" | cut -d\\\\' -f2\");\n\t\t// \treturn band;\n\t\t// },\n\t\t'getAPN': function () {\n  \t\t\tvar data = fs.readFileSync(configPath, 'utf-8');\n  \t\t\tvar match = data.match(new RegExp('APN=(.*)'));\n  \t\t\tvar APN = match[1];\n  \t\t\treturn APN;\n\t\t},\n\t\t'getAPNUser': function () {\n  \t\t\tvar data = fs.readFileSync(configPath, 'utf-8');\n  \t\t\tvar match = data.match(new RegExp('APN_USERNAME=(.*)'));\n  \t\t\tvar APNUser = match[1];\n  \t\t\treturn APNUser;\n\t\t},\n\t\t'getAPNPassword': function () {\n  \t\t\tvar data = fs.readFileSync(configPath, 'utf-8');\n  \t\t\tvar match = data.match(new RegExp('APN_PASSWORD=(.*)'));\n  \t\t\tvar APNPassword = match[1];\n  \t\t\treturn APNPassword;\n\t\t},\n\t\t'getSimCardStatus': function () {\n\t\t\tlet simStatusResult = 'Unknown'; // Default status\n\n\t\t\t// Function to execute command and handle errors\n\t\t\tfunction executeCommand(command) {\n\t\t\t\tlet result;\n\t\t\t\ttry {\n\t\t\t\t\tresult = cmd(command); // Execute the command\n\t\t\t\t\tif (typeof result === 'object' && result !== null) {\n\t\t\t\t\t\t// Check if result is an error object\n\t\t\t\t\t\treturn 'Error';\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Handle exceptions if command execution fails\n\t\t\t\t\treturn 'Error';\n\t\t\t\t}\n\t\t\t\treturn result; // Return the result if no errors\n\t\t\t}\n\n\t\t\t// Execute SIM card status check command\n\t\t\tlet simStatus = executeCommand(\"sudo qmicli --device=/dev/cdc-wdm0 --uim-get-card-status | grep 'Card state:'\");\n\t\t\tconsole.log(\"SIM card status:\", simStatus); // Log the raw output\n\t\t\t// Process the output and determine SIM card status\n\t\t\tif (simStatus.includes('no-atr-received') || simStatus.includes('not-inserted')) {\n\t\t\t\tsimStatusResult = 'No SIM card';\n\t\t\t} else if (simStatus.includes('error')) {\n\t\t\t\tsimStatusResult = simStatus; // Use the error message or no SIM detected message\n\t\t\t} else if (simStatus.includes('present')) {\n\t\t\t\tsimStatusResult = 'OK';\n\t\t\t} else if (simStatus.includes('locked') || simStatus.includes('pin-required')) {\n\t\t\t\tsimStatusResult = 'SIM card locked, PIN required';\n\t\t\t} else {\n\t\t\t\tsimStatusResult = 'Unknown'; // For other statuses\n\t\t\t}\n\t\t\treturn simStatusResult;\n\t\t},\n\t\t'getSimPin': function () {\n  \t\t\tvar data = fs.readFileSync(configPath, 'utf-8');\n  \t\t\tvar match = data.match(new RegExp('SIM_PIN=(.*)'));\n  \t\t\tvar SimPin = match[1];\n\t\t\treturn SimPin;\n\t\t},\n\t\t'setSimPin': function(PIN) {\n\t\t\tvar data = fs.readFileSync(configPath, 'utf-8');\n  \t\t\tvar newData = data.replace(data.match(new RegExp('SIM_PIN=.*')), 'SIM_PIN='+PIN);\n\t\t\tfs.writeFileSync(configPath, newData, 'utf-8');\n\t\t},\n\t\t'setAPN': function(APN, user, password) {\n\t\t\tvar data = fs.readFileSync(configPath, 'utf-8');\n  \t\t\tvar newData = data.replace(data.match(new RegExp('APN=.*')), 'APN='+APN);\n  \t\t\t// var newData = data.replace(data.match(new RegExp('APN=(.*)'))[1], APN);\n\t\t\tfs.writeFileSync(configPath, newData, 'utf-8');\n\t\t},\n\t\t'setAPNUser': function(APNUser) {\n\t\t\tvar data = fs.readFileSync(configPath, 'utf-8');\n  \t\t\tvar newData = data.replace(data.match(new RegExp('APN_USERNAME=.*')), 'APN_USERNAME='+APNUser);\n  \t\t\tfs.writeFileSync(configPath, newData, 'utf-8');\n\t\t},\n\t\t'setAPNPassword': function(APNPassword) {\n\t\t\tvar data = fs.readFileSync(configPath, 'utf-8');\n  \t\t\tvar newData = data.replace(data.match(new RegExp('APN_PASSWORD=.*')), 'APN_PASSWORD='+APNPassword);\n  \t\t\tfs.writeFileSync(configPath, newData, 'utf-8');\n\t\t},\n\t\t'getRemoteStatus': function() {\n\t\t\tvar res;\n\t\t\tres = cmd(\"systemctl is-active remote-iot.service >/dev/null 2>&1 && echo 1 || echo 0\");\n\t\t\tif (res[0] == \"1\") { // [0] is a hack because the result res has one extra character\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn false;\n\t\t},\n\t\t'getAutoSyncStatus': function() {\n\t\t\tvar res;\n\t\t\tres = cmd(\"systemctl is-active autosync.service >/dev/null 2>&1 && echo 1 || echo 0\");\n\t\t\tif (res[0] == \"1\") { // [0] is a hack because the result res has one extra character\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn false;\n\t\t},\n\t\t'getShareInternetViaEthernetStatus': function() {\n\t\t\tvar isSharing;\n\t\t\tisSharing = cmd(\"(sudo iptables -t nat -L POSTROUTING -v -n | grep -q 'MASQUERADE  all  --  *      eth0' && ip link show eth0 | grep -q 'state UP') && echo true || echo false\");\n\t\t\treturn isSharing;\n\t\t},\n\t\t'getShareInternetViaMobileStatus': function() {\n\t\t\tvar isSharing;\n\t\t\tisSharing = cmd(\"(sudo iptables -t nat -L POSTROUTING -v -n | grep -q 'MASQUERADE  all  --  *      wwan0' && ip link show wwan0 | grep -q 'state UP') && echo true || echo false\");\n\t\t\treturn isSharing;\n\t\t},\n\t\t// 'activateInternetSharing': function() {\n\t\t// \tvar res;\n\t\t// \tres = cmd(\"sudo wifi-ap.config set share.disabled=false\");\n\t\t// \treturn res;\n\t\t// },\n\t\t// 'disactivateInternetSharing': function() {\n\t\t// \tvar res;\n\t\t// \tres = cmd(\"sudo wifi-ap.config set share.disabled=true\");\n\t\t// \treturn res;\n\t\t// },\n\t\t'activateRemote': function() {\n\t\t\tvar res;\n\t\t\tres = cmd(\"sudo systemctl start remote-iot.service\");\n\t\t\tres2 = cmd(\"sudo systemctl enable remote-iot.service\");\n\t\t\treturn res;\n\t\t},\n\t\t'disactivateRemote': function() {\n\t\t\tvar res;\n\t\t\tres = cmd(\"sudo systemctl stop remote-iot.service\");\n\t\t\tres2 = cmd(\"sudo systemctl disable remote-iot.service\");\n\t\t\treturn res;\n\t\t},\n\t\t'activateAutoSync': function() {\n\t\t\tvar res;\n\t\t\tres = cmd(\"sudo systemctl start autosync.service\");\n\t\t\tres2 = cmd(\"sudo systemctl enable autosync.service\");\n\t\t\treturn res;\n\t\t},\n\t\t'disactivateAutoSync': function() {\n\t\t\tvar res;\n\t\t\tres = cmd(\"sudo systemctl stop autosync.service\");\n\t\t\tres2 = cmd(\"sudo systemctl disable autosync.service\");\n\t\t\treturn res;\n\t\t},\n\t\t'getBatteryStatus': function() {\n\t\t\tvar res;\n\t\t\tvar scriptsPath = Meteor.settings.scriptsPath;\n\t\t\tres = cmd(\"python3 \"+scriptsPath+\"/pijuice_status.py\");\n\t\t\treturn res;\n\t\t},\n\t\t// 'getIsOnline': function() {\n\t\t// \tvar res;\n\t\t// \tvar scriptsPath = Meteor.settings.scriptsPath;\n\t\t// \t// Make sure your script is executable, e.g., chmod +x check_internet.sh\n\t\t// \tres = cmd(\"bash \" + scriptsPath + \"/check_internet.sh\"); // Replace 'bash' with 'sh' if needed\n\t\t// \t// The script returns \"true\" or \"false\" as a string, so we compare the result directly\n\t\t// \treturn res.trim() === \"true\"; // This converts the string to a boolean\n\t\t// },\n\t\t'getIsOnline': function() {\n\t\t\tlet res;\n\t\t\ttry {\n\t\t\t\tres = cmd(\"ping -c 1 google.com\");\n\t\t\t\t// Check if the ping command was successful based on the output\n\t\t\t\tlet isOnline = res.includes(\"1 packets received\") || res.includes(\"1 received\");\n\t\t\t\tconsole.log(\"Online status:\", isOnline); // Correctly logging the boolean result\n\t\t\t\treturn isOnline; // Directly return the boolean value\n\t\t\t} catch (error) {\n\t\t\t\t// If an error occurs (which could include being unable to run the ping command), assume offline\n\t\t\t\tconsole.log(\"Error or offline:\", error);\n\t\t\t\treturn false; // Assume offline if there's an error\n\t\t\t}\n\t\t},\n\t\t'getEth0IP': function() { // Get IP of box\n\t\t\tvar res;\n\t\t\t//console.log(\"result : \"+\"ifconfig eth0 2>/dev/null|awk '/inet addr:/ {print $2}'|sed 's/addr://'\");\n\t\t\tres = cmd(\"ip addr show eth0 | grep \\\"inet\\\\b\\\" | awk '{print $2}' | cut -d/ -f1\");\n\t\t\t//res = cmd(\"ifconfig eth0 2>/dev/null|awk '/inet addr:/ {print $2}'|sed 's/addr://'\");\n\n\t\t\t//console.log(\"ip : \"+\"ip addr show eth0 | grep \\\"inet\\b\\\" | awk '{print $2}' | cut -d/ -f1\");\n\t\t\t//res = cmd(\"ip addr show eth0 | grep \\\"inet\\b\\\" | awk '{print $2}' | cut -d/ -f1\");\n\t\t\t//res = cmd(\"ifconfig \"+interface+\" 2>/dev/null|awk '/inet addr:/ {print $2}'|sed 's/addr://'\");\n\t\t\treturn res;\n\t\t},\n\t\t'getWwan0IP': function() { // Get IP of box\n\t\t\tvar res;\n\t\t\t//console.log(\"result : \"+\"ifconfig eth0 2>/dev/null|awk '/inet addr:/ {print $2}'|sed 's/addr://'\");\n\t\t\tres = cmd(\"ip addr show wwan0 | grep \\\"inet\\\\b\\\" | awk '{print $2}' | cut -d/ -f1\");\n\n\t\t\t//res = cmd(\"ifconfig eth0 2>/dev/null|awk '/inet addr:/ {print $2}'|sed 's/addr://'\");\n\n\t\t\t//console.log(\"ip : \"+\"ip addr show eth0 | grep \\\"inet\\b\\\" | awk '{print $2}' | cut -d/ -f1\");\n\t\t\t//res = cmd(\"ip addr show eth0 | grep \\\"inet\\b\\\" | awk '{print $2}' | cut -d/ -f1\");\n\t\t\t//res = cmd(\"ifconfig \"+interface+\" 2>/dev/null|awk '/inet addr:/ {print $2}'|sed 's/addr://'\");\n\t\t\treturn res;\n\t\t},\n\n\t\t'getBeekeeOsVersion': function() {\n\t\t\tvar data = fs.readFileSync(configPath, 'utf-8');\n\t\t\tvar match = data.match(new RegExp('BEEKEE_OS_VERSION=(.*)'));\n\t\t\tvar serial = match[1];\n\t\t\treturn serial;\n\t\t},\n\t\t'getBeekeeHomeVersion': function() {\n\t\t\tjson = JSON.parse(Assets.getText(\"version.json\"));\n\t\t\treturn json.version;\n\t\t},\n\t\t'restartMobileConnect': function() {\n\t\t\tvar res;\n\t\t\tres = cmd(\"sudo systemctl restart mobile_connect.service\");\n\t\t\treturn res;''\n\t\t},\n\t\t'getInternetInterface': function() {\n\t\t\tlet res;\n\t\t\ttry {\n\t\t\t\tres = cmd(\"ip route get 1.2.3.4 | awk '{print $5; exit}'\"); // Execute the command\n\t\t\t\tif (res.trim()) {\n\t\t\t\t\treturn res.trim(); // Return the cleaned-up result if not empty\n\t\t\t\t} else {\n\t\t\t\t\treturn 'Unknown'; // Return a default message if the result is empty\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// Handle cases where the command fails or is not found\n\t\t\t\tconsole.log(\"Error retrieving internet interface:\", error);\n\t\t\t\treturn 'Error'; // Return an error message\n\t\t\t}\n\t\t},\n\t\t// 'getInternetSharingStatusEthernet': function(callback) {\n\t\t// \t// Command to list FORWARD rules\n\t\t// \tvar listForwardRulesCommand = 'sudo iptables -L FORWARD -n --line-number';\n\n\t\t// \tcmd(listForwardRulesCommand, (error, stdout, stderr) => {\n\t\t// \t\tif (error || stderr) {\n\t\t// \t\t\tconsole.error(`Error listing FORWARD rules: ${error || stderr}`);\n\t\t// \t\t\tif (callback) callback(error || new Error(stderr), null);\n\t\t// \t\t\treturn;\n\t\t// \t\t}\n\n\t\t// \t\t// Check for general internet sharing rules\n\t\t// \t\tvar isGeneralSharingEnabled = stdout.includes('in-interface wlan0 out-interface eth0') && stdout.includes('state RELATED,ESTABLISHED');\n\t\t// \t\tconsole.log(\"isGeneralSharingEnabled: \"+isGeneralSharingEnabled);\n\t\t// \t\t// Extract MAC address rules\n\t\t// \t\tvar macAddressRuleRegex = /MAC ([\\da-fA-F:]+) .* in-interface eth0/;\n\t\t// \t\tvar match = stdout.match(macAddressRuleRegex);\n\n\t\t// \t\t// Determine the status based on the rules found\n\t\t// \t\tif (isGeneralSharingEnabled && !match) {\n\t\t// \t\t\tconsole.log(\"step1\");\n\t\t// \t\t\t// Internet sharing is enabled for all\n\t\t// \t\t\tif (callback) {console.log(\"step12\"); callback(null, { status: 'enabled for all', macAddress: null });}\n\t\t// \t\t} else if (match && match[1]) {\n\t\t// \t\t\tconsole.log(\"step2\");\n\n\t\t// \t\t\t// Internet sharing is enabled for a specific MAC address\n\t\t// \t\t\tif (callback) callback(null, { status: 'enabled for specific MAC', macAddress: match[1] });\n\t\t// \t\t} else {\n\t\t// \t\t\tconsole.log(\"step3\");\n\n\t\t// \t\t\t// Internet sharing is disabled or not configured as expected\n\t\t// \t\t\tif (callback) callback(null, { status: 'disabled', macAddress: null });\n\t\t// \t\t}\n\t\t// \t});\n\t\t// },\n\n\n\n\n\t\t\t//   'getInternetSharingStatusEthernet': function() {\n\t\t\t// \tconsole.log('Starting to get internet sharing status for Ethernet...');\n\t\t\t// \tvar listForwardRulesCommand = 'sudo iptables -L FORWARD -n --line-number';\n\n\t\t\t// \t// Since cmd is already wrapped by Meteor.wrapAsync(exec),\n\t\t\t// \t// it should return { stdout, stderr } directly.\n\t\t\t// \ttry {\n\t\t\t// \t  var { stdout, stderr } = cmd(listForwardRulesCommand);\n\n\t\t\t// \t  if (stderr) {\n\t\t\t// \t\tconsole.error(`Error listing FORWARD rules: ${stderr}`);\n\t\t\t// \t\t// It's better to return a meaningful error to the client.\n\t\t\t// \t\treturn { error: \"Error listing FORWARD rules\", details: stderr };\n\t\t\t// \t  }\n\n\t\t\t// \t  console.log('Analyzing iptables FORWARD rules output...');\n\t\t\t// \t  // Check for general internet sharing rules\n\t\t\t// \t  var isGeneralSharingEnabled = stdout.includes('in-interface wlan0 out-interface eth0') && stdout.includes('state RELATED,ESTABLISHED');\n\t\t\t// \t  console.log(`isGeneralSharingEnabled: ${isGeneralSharingEnabled}`);\n\n\t\t\t// \t  // Extract MAC address rules\n\t\t\t// \t  var macAddressRuleRegex = /MAC ([\\da-fA-F:]+) .* in-interface eth0/;\n\t\t\t// \t  var match = stdout.match(macAddressRuleRegex);\n\t\t\t// \t  console.log(`MAC address found: ${match ? match[1] : 'None'}`);\n\n\t\t\t// \t  // Determine the status based on the rules found\n\t\t\t// \t  if (isGeneralSharingEnabled && !match) {\n\t\t\t// \t\tconsole.log('Internet sharing is enabled for all.');\n\t\t\t// \t\treturn { status: 'enabled for all', macAddress: null };\n\t\t\t// \t  } else if (match && match[1]) {\n\t\t\t// \t\tconsole.log(`Internet sharing is enabled for a specific MAC address: ${match[1]}`);\n\t\t\t// \t\treturn { status: 'enabled for specific MAC', macAddress: match[1] };\n\t\t\t// \t  } else {\n\t\t\t// \t\tconsole.log('Internet sharing is disabled or not configured as expected.');\n\t\t\t// \t\treturn { status: 'disabled', macAddress: null };\n\t\t\t// \t  }\n\t\t\t// \t} catch (error) {\n\t\t\t// \t  console.error(`Command execution error: ${error}`);\n\t\t\t// \t  // It's better to return a meaningful error to the client.\n\t\t\t// \t  return { error: \"Command execution error\", details: error.toString() };\n\t\t\t// \t}\n\t\t\t//   },\n\n\n\n\t\t\t\t//   'getInternetSharingStatusEthernet': function() {\n\t\t\t\t// \tvar listForwardRulesCommand = 'sudo iptables -S FORWARD';\n\t\t\t\t// \tvar commandResult = cmd(listForwardRulesCommand);\n\n\t\t\t\t// \tif (!commandResult) {\n\t\t\t\t// \t  throw new Meteor.Error(\"command-execution-error\", \"The command did not return any output.\");\n\t\t\t\t// \t}\n\n\t\t\t\t// \tvar isGeneralSharingEnabled = commandResult.includes('in-interface wlan0 out-interface eth0') && commandResult.includes('state RELATED,ESTABLISHED');\n\t\t\t\t// \tvar macAddressRuleRegex = /MAC ([\\da-fA-F:]+) .* in-interface eth0/;\n\t\t\t\t// \tvar match = commandResult.match(macAddressRuleRegex);\n\n\t\t\t\t// \tif (isGeneralSharingEnabled && !match) {\n\t\t\t\t// \t  return { status: 'enabled for all', macAddress: null };\n\t\t\t\t// \t} else if (match && match[1]) {\n\t\t\t\t// \t  return { status: 'enabled for specific MAC', macAddress: match[1] };\n\t\t\t\t// \t} else {\n\t\t\t\t// \t  return { status: 'disabled', macAddress: null };\n\t\t\t\t// \t}\n\t\t\t\t//   },\n\n\n\n\n\t\t\t\t\t  'getInternetSharingStatusEthernet': function() {\n\n\t\t\t\t\t\tvar listForwardRulesCommand = 'sudo iptables -S FORWARD';\n\n\t\t\t\t\t\tvar commandResult = cmd(listForwardRulesCommand);\n\n\t\t\t\t\t\tif (!commandResult) {\n\t\t\t\t\t\t  throw new Meteor.Error(\"command-execution-error\", \"The command did not return any output.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar sharingFromWlanToEth = null;\n\t\t\t\t\t\tvar sharingToWlanFromEthEstablished = null;\n\n\t\t\t\t\t\tvar beekeeOSVersion = Meteor.call('getBeekeeOsVersion');\n\t\t\t\t\t\tconsole.log(\"beekeeOSVersion: \"+beekeeOSVersion);\n\t\t\t\t\t\tif (beekeeOSVersion >= 20240926) {\n\t\t\t\t\t\t\t// Check for the specific rule indicating internet sharing from wlan0 to eth0\n\t\t\t\t\t\t\tsharingFromWlanToEth = commandResult.includes('-A FORWARD -i wlanint -o eth0 -j ACCEPT');\n\t\t\t\t\t\t\tsharingToWlanFromEthEstablished = commandResult.includes('-A FORWARD -i eth0 -o wlanint -m state --state RELATED,ESTABLISHED -j ACCEPT');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Check for the specific rule indicating internet sharing from wlan0 to eth0\n\t\t\t\t\t\t\tsharingFromWlanToEth = commandResult.includes('-A FORWARD -i wlan0 -o eth0 -j ACCEPT');\n\t\t\t\t\t\t\tsharingToWlanFromEthEstablished = commandResult.includes('-A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sharingFromWlanToEth && sharingToWlanFromEthEstablished) {\n\t\t\t\t\t\t  // If at least one pair of rules exists, internet sharing is considered enabled.\n\t\t\t\t\t\t  return { status: 'enabled for all', macAddress: null };\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t  return { status: 'disabled', macAddress: null };\n\t\t\t\t\t\t}\n\t\t\t\t\t  },\n\n\n\n\n\n\n\n\n\t\t'enableInternetSharingEthernet': function(callback) {\n\n\t\t\tvar iptablesCommands = null;\n\n\t\t\tvar beekeeOSVersion = Meteor.call('getBeekeeOsVersion');\n\t\t\tif (beekeeOSVersion >= 20240926) {\n\t\t\t\tiptablesCommands = [\n\t\t\t\t\t'sudo iptables --append FORWARD --in-interface wlanint --out-interface eth0 -j ACCEPT',\n\t\t\t\t\t'sudo iptables --append FORWARD --in-interface wlanusb --out-interface eth0 -j ACCEPT',\n\t\t\t\t\t'sudo iptables --append FORWARD --in-interface eth0 --out-interface wlanint -m state --state RELATED,ESTABLISHED -j ACCEPT',\n\t\t\t\t\t'sudo iptables --append FORWARD --in-interface eth0 --out-interface wlanusb -m state --state RELATED,ESTABLISHED -j ACCEPT',\n\t\t\t\t\t'sudo iptables --table nat --append POSTROUTING --out-interface eth0 -j MASQUERADE',\n\t\t\t\t\t'sudo netfilter-persistent save'\n\t\t\t\t].join(' && ');\n\t\t\t} else {\n\t\t\t\tiptablesCommands = [\n\t\t\t\t\t'sudo iptables --append FORWARD --in-interface wlan0 --out-interface eth0 -j ACCEPT',\n\t\t\t\t\t'sudo iptables --append FORWARD --in-interface eth0 --out-interface wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT',\n\t\t\t\t\t'sudo iptables --table nat --append POSTROUTING --out-interface eth0 -j MASQUERADE',\n\t\t\t\t\t'sudo netfilter-persistent save'\n\t\t\t\t].join(' && ');\n\t\t\t}\n\n\t\t\tcmd(iptablesCommands, (error, stdout, stderr) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(`exec error: ${error}`);\n\t\t\t\t\tif (callback) callback(error, null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (stderr) {\n\t\t\t\t\tconsole.error(`stderr: ${stderr}`);\n\t\t\t\t\tif (callback) callback(new Error(stderr), null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconsole.log('Internet sharing via Ethernet enabled successfully.');\n\t\t\t\tif (callback) callback(null, stdout);\n\t\t\t});\n\t\t},\n\t\t'disableInternetSharingEthernet': function(callback) {\n\t\t\t// Define a list of commands to repeatedly attempt deletion.\n\t\t\tvar iptablesDeleteCommands = null;\n\n\t\t\tvar beekeeOSVersion = Meteor.call('getBeekeeOsVersion');\n\t\t\tif (beekeeOSVersion >= 20240926) {\n\t\t\t\tiptablesDeleteCommands = [\n\t\t\t\t\t'sudo iptables --delete FORWARD --in-interface wlanint --out-interface eth0 -j ACCEPT',\n\t\t\t\t\t'sudo iptables --delete FORWARD --in-interface wlanusb --out-interface eth0 -j ACCEPT',\n\t\t\t\t\t'sudo iptables --delete FORWARD --in-interface eth0 --out-interface wlanint -m state --state RELATED,ESTABLISHED -j ACCEPT',\n\t\t\t\t\t'sudo iptables --delete FORWARD --in-interface eth0 --out-interface wlanusb -m state --state RELATED,ESTABLISHED -j ACCEPT',\n\t\t\t\t\t'sudo iptables --table nat --delete POSTROUTING --out-interface eth0 -j MASQUERADE',\n\t\t\t\t\t'sudo netfilter-persistent save'\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tiptablesDeleteCommands = [\n\t\t\t\t\t'sudo iptables --delete FORWARD --in-interface wlan0 --out-interface eth0 -j ACCEPT',\n\t\t\t\t\t'sudo iptables --delete FORWARD --in-interface eth0 --out-interface wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT',\n\t\t\t\t\t'sudo iptables --table nat --delete POSTROUTING --out-interface eth0 -j MASQUERADE',\n\t\t\t\t\t'sudo netfilter-persistent save'\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t// Function to execute a command and recursively call itself if the command was successful (rule was found and deleted).\n\t\t\tfunction executeAndRepeat(command, doneCallback) {\n\t\t\t\tcmd(command, (error, stdout, stderr) => {\n\t\t\t\t\t// If there's no error, the rule was found and deleted, so try again.\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\texecuteAndRepeat(command, doneCallback);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If there's an error, it likely means no more instances of the rule exist, so call the doneCallback.\n\t\t\t\t\t\tdoneCallback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Execute deletion for each command and track completion.\n\t\t\tvar tasksCompleted = 0;\n\t\t\tiptablesDeleteCommands.forEach((command) => {\n\t\t\t\texecuteAndRepeat(command, () => {\n\t\t\t\t\ttasksCompleted++;\n\t\t\t\t\t// Once all deletion tasks are done, save the iptables configuration.\n\t\t\t\t\tif (tasksCompleted === iptablesDeleteCommands.length) {\n\t\t\t\t\t\tcmd('sudo netfilter-persistent save', (error, stdout, stderr) => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\tconsole.error(`exec error during saving iptables rules: ${error}`);\n\t\t\t\t\t\t\t\tif (callback) callback(error);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log(`iptables rules saved.`);\n\t\t\t\t\t\t\tif (callback) callback(null, 'All specified rules removed and changes saved.');\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\n\t\t// 'disableInternetSharingEthernet': function(callback) {\n\t\t// \tvar iptablesCommands = [\n\t\t// \t\t'sudo iptables --delete FORWARD --in-interface wlan0 --out-interface eth0 -j ACCEPT',\n\t\t// \t\t'sudo iptables --delete FORWARD --in-interface eth0 --out-interface wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT',\n\t\t// \t\t'sudo iptables --table nat --delete POSTROUTING --out-interface eth0 -j MASQUERADE',\n\t\t// \t\t'sudo netfilter-persistent save'\n\t\t// \t].join(' && ');\n\n\t\t// \tcmd(iptablesCommands, (error, stdout, stderr) => {\n\t\t// \t\tif (error) {\n\t\t// \t\t\tconsole.error(`exec error: ${error}`);\n\t\t// \t\t\tif (callback) callback(error, null);\n\t\t// \t\t\treturn;\n\t\t// \t\t}\n\t\t// \t\tif (stderr) {\n\t\t// \t\t\tconsole.error(`stderr: ${stderr}`);\n\t\t// \t\t\tif (callback) callback(new Error(stderr), null);\n\t\t// \t\t\treturn;\n\t\t// \t\t}\n\t\t// \t\tconsole.log('Internet sharing via Ethernet disabled successfully.');\n\t\t// \t\tif (callback) callback(null, stdout);\n\t\t// \t});\n\t\t// },\n\t\t'enableInternetForMacEthernet': function(macAddress, callback) {\n\t\t\tvar res;\n\t\t\t// Command to allow internet for the specified MAC address on eth0.\n\t\t\tvar allowMacCommand = `sudo iptables -A FORWARD -i eth0 -m mac --mac-source ${macAddress} -j ACCEPT`;\n\t\t\t// Command to drop all other internet traffic on eth0.\n\t\t\tvar blockOthersCommand = `sudo iptables -A FORWARD -i eth0 -j DROP`;\n\n\t\t\t// Allow internet for the specified MAC address.\n\t\t\tres = cmd(allowMacCommand, (error, stdout, stderr) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(`exec error during allowing MAC ${macAddress}: ${error}`);\n\t\t\t\t\tcallback(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconsole.log(`Internet access allowed for MAC ${macAddress}.`);\n\n\t\t\t\t// Block all other MAC addresses from accessing the internet.\n\t\t\t\tres = cmd(blockOthersCommand, (error, stdout, stderr) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconsole.error(`exec error during blocking other MACs: ${error}`);\n\t\t\t\t\t\tcallback(error);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(`Internet access blocked for other MAC addresses.`);\n\t\t\t\t\t// Optionally, save the iptables settings to make them persistent.\n\t\t\t\t\tcmd('sudo netfilter-persistent save', (error, stdout, stderr) => {\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tconsole.error(`exec error during saving iptables rules: ${error}`);\n\t\t\t\t\t\t\tcallback(error);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(`iptables rules saved.`);\n\t\t\t\t\t\tcallback(null);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t'removeAllMacFiltersForEthernet': function(callback) {\n\t\t\t// List all FORWARD rules with line numbers\n\t\t\tcmd('sudo iptables -L FORWARD --line-numbers -n', (error, stdout, stderr) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(`Error listing FORWARD rules: ${error}`);\n\t\t\t\t\tif (callback) callback(error, null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Process stdout to identify rules related to MAC filtering on eth0\n\t\t\t\tconst lines = stdout.split('\\n');\n\t\t\t\tconst ruleNumbers = lines.reduce((acc, line, index) => {\n\t\t\t\t\tif (line.includes('eth0') && line.toLowerCase().includes('mac')) {\n\t\t\t\t\t\tconst ruleNumber = line.split(/\\s+/)[0]; // Extract the rule number, assuming it's the first element\n\t\t\t\t\t\tacc.push(ruleNumber);\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, []);\n\n\t\t\t\t// Remove identified rules starting from the highest number to prevent shifting of line numbers\n\t\t\t\truleNumbers.sort((a, b) => b - a).forEach(ruleNumber => {\n\t\t\t\t\tcmd(`sudo iptables -D FORWARD ${ruleNumber}`, (removeError, removeStdout, removeStderr) => {\n\t\t\t\t\t\tif (removeError) {\n\t\t\t\t\t\t\tconsole.error(`Error removing rule ${ruleNumber}: ${removeError}`);\n\t\t\t\t\t\t\t// Decide if you want to continue removing other rules or stop here\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(`Rule ${ruleNumber} removed successfully.`);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// After attempting to remove all identified rules, save the iptables configuration\n\t\t\t\tcmd('sudo netfilter-persistent save', (saveError, saveStdout, saveStderr) => {\n\t\t\t\t\tif (saveError) {\n\t\t\t\t\t\tconsole.error(`Error saving iptables rules: ${saveError}`);\n\t\t\t\t\t\tif (callback) callback(saveError, null);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log('iptables rules updated and saved.');\n\t\t\t\t\tif (callback) callback(null, 'All MAC filter rules for Ethernet removed and changes saved.');\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t'getInternetSharingStatusMobile': function() {\n\t\t\tvar listForwardRulesCommand = 'sudo iptables -S FORWARD';\n\n\t\t\tvar commandResult = cmd(listForwardRulesCommand);\n\n\t\t\tif (!commandResult) {\n\t\t\tthrow new Meteor.Error(\"command-execution-error\", \"The command did not return any output.\");\n\t\t\t}\n\n\t\t\t// Adjusted to check for the specific rule indicating internet sharing from wlanint to wwan0\n\t\t\tvar sharingFromWlanToWwan = null;\n\t\t\tvar sharingToWlanFromWwanEstablished = null;\n\t\t\tvar beekeeOSVersion = Meteor.call('getBeekeeOsVersion');\n\t\t\tif (beekeeOSVersion >= 20240926) {\n\t\t\t\tsharingFromWlanToWwan = commandResult.includes('-A FORWARD -i wlanint -o wwan0 -j ACCEPT');\n\t\t\t\tsharingToWlanFromWwanEstablished = commandResult.includes('-A FORWARD -i wwan0 -o wlanint -m state --state RELATED,ESTABLISHED -j ACCEPT');\n\t\t\t} else {\n\t\t\t\tsharingFromWlanToWwan = commandResult.includes('-A FORWARD -i wlan0 -o wwan0 -j ACCEPT');\n\t\t\t\tsharingToWlanFromWwanEstablished = commandResult.includes('-A FORWARD -i wwan0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT');\n\t\t\t}\n\t\t\tif (sharingFromWlanToWwan && sharingToWlanFromWwanEstablished) {\n\t\t\t// If at least one pair of rules exists, internet sharing to the mobile interface is considered enabled.\n\t\t\treturn { status: 'enabled for all', macAddress: null };\n\t\t\t} else {\n\t\t\treturn { status: 'disabled', macAddress: null };\n\t\t\t}\n\t\t},\n\n\t\t// 'getInternetSharingStatusMobile': function(callback) {\n\t\t// \t// Command to list FORWARD rules\n\t\t// \tvar listForwardRulesCommand = 'sudo iptables -L FORWARD -n --line-number';\n\n\t\t// \tcmd(listForwardRulesCommand, (error, stdout, stderr) => {\n\t\t// \t\tif (error || stderr) {\n\t\t// \t\t\tconsole.error(`Error listing FORWARD rules: ${error || stderr}`);\n\t\t// \t\t\tif (callback) callback(error || new Error(stderr), null);\n\t\t// \t\t\treturn;\n\t\t// \t\t}\n\n\t\t// \t\t// Check for general internet sharing rules\n\t\t// \t\tvar isGeneralSharingEnabled = stdout.includes('in-interface wlan0 out-interface wwan0') && stdout.includes('state RELATED,ESTABLISHED');\n\n\t\t// \t\t// Extract MAC address rules\n\t\t// \t\tvar macAddressRuleRegex = /MAC ([\\da-fA-F:]+) .* in-interface wwan0/;\n\t\t// \t\tvar match = stdout.match(macAddressRuleRegex);\n\n\t\t// \t\t// Determine the status based on the rules found\n\t\t// \t\tif (isGeneralSharingEnabled && !match) {\n\t\t// \t\t\t// Internet sharing is enabled for all\n\t\t// \t\t\tif (callback) callback(null, { status: 'enabled for all', macAddress: null });\n\t\t// \t\t} else if (match && match[1]) {\n\t\t// \t\t\t// Internet sharing is enabled for a specific MAC address\n\t\t// \t\t\tif (callback) callback(null, { status: 'enabled for specific MAC', macAddress: match[1] });\n\t\t// \t\t} else {\n\t\t// \t\t\t// Internet sharing is disabled or not configured as expected\n\t\t// \t\t\tif (callback) callback(null, { status: 'disabled', macAddress: null });\n\t\t// \t\t}\n\t\t// \t});\n\t\t// },\n\n\t\t'enableInternetSharingMobile': function(callback) {\n\t\t\tvar iptablesCommands = null;\n\t\t\tvar beekeeOSVersion = Meteor.call('getBeekeeOsVersion');\n\t\t\tif (beekeeOSVersion >= 20240926) {\n\t\t\t\tiptablesCommands = [\n\t\t\t\t\t'sudo iptables --append FORWARD --in-interface wlanint --out-interface wwan0 -j ACCEPT',\n\t\t\t\t\t'sudo iptables --append FORWARD --in-interface wlanusb --out-interface wwan0 -j ACCEPT',\n\t\t\t\t\t'sudo iptables --append FORWARD --in-interface wwan0 --out-interface wlanint -m state --state RELATED,ESTABLISHED -j ACCEPT',\n\t\t\t\t\t'sudo iptables --append FORWARD --in-interface wwan0 --out-interface wlanusb -m state --state RELATED,ESTABLISHED -j ACCEPT',\n\t\t\t\t\t'sudo iptables --table nat --append POSTROUTING --out-interface wwan0 -j MASQUERADE',\n\t\t\t\t\t'sudo netfilter-persistent save'\n\t\t\t\t].join(' && ');\n\t\t\t} else {\n\t\t\t\tiptablesCommands = [\n\t\t\t\t\t'sudo iptables --append FORWARD --in-interface wlan0 --out-interface wwan0 -j ACCEPT',\n\t\t\t\t\t'sudo iptables --append FORWARD --in-interface wwan0 --out-interface wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT',\n\t\t\t\t\t'sudo iptables --table nat --append POSTROUTING --out-interface wwan0 -j MASQUERADE',\n\t\t\t\t\t'sudo netfilter-persistent save'\n\t\t\t\t].join(' && ');\n\t\t\t}\n\n\t\t\tcmd(iptablesCommands, (error, stdout, stderr) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(`exec error: ${error}`);\n\t\t\t\t\tif (callback) callback(error, null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (stderr) {\n\t\t\t\t\tconsole.error(`stderr: ${stderr}`);\n\t\t\t\t\tif (callback) callback(new Error(stderr), null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconsole.log('Internet sharing via mobile enabled successfully.');\n\t\t\t\tif (callback) callback(null, stdout);\n\t\t\t});\n\t\t},\n\t\t'disableInternetSharingMobile': function(callback) {\n\t\t\t// Define commands for deletion without combining them\n\t\t\tvar iptablesDeleteCommands = null;\n\t\t\tvar beekeeOSVersion = Meteor.call('getBeekeeOsVersion');\n\t\t\tif (beekeeOSVersion >= 20240926) {\n\t\t\t\tvar iptablesDeleteCommands = [\n\t\t\t\t\t'sudo iptables --delete FORWARD --in-interface wlanint --out-interface wwan0 -j ACCEPT',\n\t\t\t\t\t'sudo iptables --delete FORWARD --in-interface wlanusb --out-interface wwan0 -j ACCEPT',\n\t\t\t\t\t'sudo iptables --delete FORWARD --in-interface wwan0 --out-interface wlanint -m state --state RELATED,ESTABLISHED -j ACCEPT',\n\t\t\t\t\t'sudo iptables --delete FORWARD --in-interface wwan0 --out-interface wlanusb -m state --state RELATED,ESTABLISHED -j ACCEPT',\n\t\t\t\t\t'sudo iptables --table nat --delete POSTROUTING --out-interface wwan0 -j MASQUERADE'\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tvar iptablesDeleteCommands = [\n\t\t\t\t\t'sudo iptables --delete FORWARD --in-interface wlan0 --out-interface wwan0 -j ACCEPT',\n\t\t\t\t\t'sudo iptables --delete FORWARD --in-interface wwan0 --out-interface wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT',\n\t\t\t\t\t'sudo iptables --table nat --delete POSTROUTING --out-interface wwan0 -j MASQUERADE'\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t// Function to recursively execute a command until it fails (indicating no more instances of the rule)\n\t\t\tfunction executeAndRepeat(command, doneCallback) {\n\t\t\t\tcmd(command, (error, stdout, stderr) => {\n\t\t\t\t\t// No error means the command succeeded, so there might be more instances\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\texecuteAndRepeat(command, doneCallback);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Error likely means no more instances of the rule, move on\n\t\t\t\t\t\tdoneCallback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Execute deletion for each command and track when all are completed\n\t\t\tvar tasksCompleted = 0;\n\t\t\tiptablesDeleteCommands.forEach((command) => {\n\t\t\t\texecuteAndRepeat(command, () => {\n\t\t\t\t\ttasksCompleted++;\n\t\t\t\t\t// After all commands have been attempted, save the configuration\n\t\t\t\t\tif (tasksCompleted === iptablesDeleteCommands.length) {\n\t\t\t\t\t\tcmd('sudo netfilter-persistent save', (error, saveStdout, saveStderr) => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\tconsole.error(`Error saving iptables rules: ${error}`);\n\t\t\t\t\t\t\t\tif (callback) callback(error, null);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log('iptables rules for mobile interface updated and saved.');\n\t\t\t\t\t\t\tif (callback) callback(null, 'All specified rules for mobile interface removed and changes saved.');\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\n\t\t// 'disableInternetSharingMobile': function(callback) {\n\t\t// \tvar iptablesCommands = [\n\t\t// \t\t'sudo iptables --delete FORWARD --in-interface wlan0 --out-interface wwan0 -j ACCEPT',\n\t\t// \t\t'sudo iptables --delete FORWARD --in-interface wwan0 --out-interface wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT',\n\t\t// \t\t'sudo iptables --table nat --delete POSTROUTING --out-interface wwan0 -j MASQUERADE',\n\t\t// \t\t'sudo netfilter-persistent save'\n\t\t// \t].join(' && ');\n\n\t\t// \tcmd(iptablesCommands, (error, stdout, stderr) => {\n\t\t// \t\tif (error) {\n\t\t// \t\t\tconsole.error(`exec error: ${error}`);\n\t\t// \t\t\tif (callback) callback(error, null);\n\t\t// \t\t\treturn;\n\t\t// \t\t}\n\t\t// \t\tif (stderr) {\n\t\t// \t\t\tconsole.error(`stderr: ${stderr}`);\n\t\t// \t\t\tif (callback) callback(new Error(stderr), null);\n\t\t// \t\t\treturn;\n\t\t// \t\t}\n\t\t// \t\tconsole.log('Internet sharing via mobile disabled successfully.');\n\t\t// \t\tif (callback) callback(null, stdout);\n\t\t// \t});\n\t\t// },\n\t\t'allowInternetForMacMobile': function(macAddress, callback) {\n\t\t\tvar res;\n\t\t\t// First, enable general internet sharing from wlan0 to wwan0\n\t\t\tres = cmd('sudo iptables --append FORWARD --in-interface wlan0 --out-interface wwan0 -j ACCEPT && sudo iptables --append FORWARD --in-interface wwan0 --out-interface wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT && sudo iptables --table nat --append POSTROUTING --out-interface wwan0 -j MASQUERADE', (error, stdout, stderr) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(`exec error during enabling internet sharing: ${error}`);\n\t\t\t\t\treturn callback(error);\n\t\t\t\t}\n\t\t\t\tconsole.log(`Internet sharing enabled via wwan0.`);\n\t\t\t\t// Allow internet only for the specified MAC address on wwan0\n\t\t\t\tvar allowMacCommand = `sudo iptables -I FORWARD 1 -i wwan0 -m mac --mac-source ${macAddress} -j ACCEPT`;\n\t\t\t\t// Block all other MAC addresses from accessing the internet via wwan0.\n\t\t\t\tvar blockOthersCommand = `sudo iptables -A FORWARD -i wwan0 -j DROP`;\n\n\t\t\t\t// Allow specific MAC\n\t\t\t\tres = cmd(allowMacCommand, (error, stdout, stderr) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconsole.error(`exec error during allowing MAC ${macAddress} on WWAN: ${error}`);\n\t\t\t\t\t\treturn callback(error);\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(`Internet access allowed for MAC ${macAddress} on WWAN.`);\n\n\t\t\t\t\t// Block all other MACs\n\t\t\t\t\tres = cmd(blockOthersCommand, (error, stdout, stderr) => {\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tconsole.error(`exec error during blocking other MACs on WWAN: ${error}`);\n\t\t\t\t\t\t\treturn callback(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(`Internet access blocked for other MAC addresses on WWAN.`);\n\n\t\t\t\t\t\t// Save iptables rules\n\t\t\t\t\t\tcmd('sudo netfilter-persistent save', (error, stdout, stderr) => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\tconsole.error(`exec error during saving iptables rules for WWAN: ${error}`);\n\t\t\t\t\t\t\t\treturn callback(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.log(`iptables rules for WWAN saved.`);\n\t\t\t\t\t\t\tcallback(null);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t'removeAllMacFiltersForMobile': function(callback) {\n\t\t\t// List all FORWARD rules\n\t\t\tcmd('sudo iptables -L FORWARD --line-numbers -n', (error, stdout, stderr) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(`Error listing rules: ${error}`);\n\t\t\t\t\tif (callback) callback(error, null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Process stdout to find rules to delete. This part is pseudo-code and needs adjustment\n\t\t\t\tconst lines = stdout.split('\\n');\n\t\t\t\tconst ruleNumbers = [];\n\t\t\t\tlines.forEach(line => {\n\t\t\t\t\tif (line.includes('wwan0') && line.includes('MAC')) {\n\t\t\t\t\t\t// Extract the rule number from the line\n\t\t\t\t\t\tconst ruleNumber = line.split(' ')[0]; // This is a simplification\n\t\t\t\t\t\truleNumbers.push(ruleNumber);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Remove rules by their numbers, starting from the highest number\n\t\t\t\truleNumbers.sort((a, b) => b - a).forEach(ruleNumber => {\n\t\t\t\t\tcmd(`sudo iptables -D FORWARD ${ruleNumber}`, (error, stdout, stderr) => {\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tconsole.error(`Error removing rule ${ruleNumber}: ${error}`);\n\t\t\t\t\t\t\tif (callback) callback(error, null);\n\t\t\t\t\t\t\t// Optionally, stop the process or continue attempting to remove other rules\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(`Rule ${ruleNumber} removed successfully.`);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// After all rules have been processed, save the iptables rules\n\t\t\t\tcmd('sudo netfilter-persistent save', (error, stdout, stderr) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconsole.error(`Error saving iptables rules: ${error}`);\n\t\t\t\t\t\tif (callback) callback(error, null);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log('iptables rules updated and saved.');\n\t\t\t\t\tif (callback) callback(null, 'All MAC filter rules for WWAN removed and changes saved.');\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t'reboot': function() {\n\t\t\tvar res;\n\t\t\tres = cmd('sudo reboot', (error, stdout, stderr) => {\n\t\t\tif (error) {\n\t\t\t\t  console.error(`exec error: ${error}`);\n\t\t\t\t  return;\n\t\t\t\t} else {\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t'shutdown': function() {\n\t\t\tvar res;\n\t\t\tres = cmd('sudo halt', (error, stdout, stderr) => {\n\t\t\tif (error) {\n\t\t\t\t  console.error(`exec error: ${error}`);\n\t\t\t\t  return;\n\t\t\t\t} else {\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t'synchronize': function() {\n\n\t\t\tconsole.log(\"Starting sync...\");\n\n\t\t\tvar deviceSerial = Meteor.settings.public.serial;\n\t\t\tvar deviceToken = Meteor.settings.moodleAPIToken;\n\t\t\tvar url = Meteor.settings.cloudURL + \"/api/startSync\";\n\t\t\tvar options = {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tdata: {\n\t\t\t\t\t'deviceSerial': deviceSerial,\n\t\t\t\t\t'deviceToken': deviceToken\n\t\t\t\t},\n\t\t\t    npmRequestOptions: {\n\t\t\t        rejectUnauthorized: false, // TODO remove when deploy\n\t\t\t        timeout: 1200000\n\t\t\t    },\n\t\t\t    timeout: 1200000\n\t\t\t}\n\t\t\ttry {\n\t\t\t\t//var result = HTTP.call('POST', url, options);\n\n\t\t\t\tvar result = HTTP.post( url, options );\n\t\t\t\tvar resultContent = result.content;\n\t\t\t\t//Synchronizations.insert({date:Date.now()});\n\t\t\t\treturn resultContent;\n\t\t\t} catch(e) {\n\t\t\t\tconsole.log( \"Error while trying to syncronize...\", e );\n\t\t\t\treturn \"Error while trying to syncronize... \"+ e;\n\t\t\t}\n\t\t//return resultContent;\n\t\t},\n\t});\n}\n});","// Meteor.publish('allApps', function() {\n// \treturn Apps.find({});\n// });\n\n// Meteor.publish(\"users\", function() {\n//     return Meteor.users.find({}, {fields:{createdAt: true, profile: true, emails: true, username: true}});\n// });\n\n\n  Meteor.publish('allUsers', function () {\n  \tconsole.log(\"users: \"+Meteor.users.find().count());\n    return Meteor.users.find();\n  });","import { Meteor } from 'meteor/meteor';\n\nimport '../imports/api/apps.js';\nimport '../imports/api/synchronizations.js';\nimport '../imports/api/users.js';\n\nimport '../server/fixtures.js';\nimport '../server/methods.js';\nimport '../server/publications.js';\nimport '../lib/app_loader.js';\n\n\n//import {DDP} from 'meteor/ddp';\n//import {Accounts} from 'meteor/accounts-base';\n\n\n// import '../imports/startup/server/fixtures.js';\n\n// import '../imports/api/fixtures.js';\n\n\nMeteor.startup(() => {\n\tconsole.log(\"meteor started...\");\n\n\n\n  // code to run on server at startup\n\n //  Server2 = DDP.connect(\"http://beekee.box:83\");\n\t// Accounts.connection = Server2;\n\t// console.log(\"on connecte...\");\n});\n"]}